# Generated by Django 3.0.3 on 2020-02-17 20:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=500, null=True)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(null=True)),
                ('cancelled_date', models.DateTimeField(null=True)),
                ('cancelled_reason', models.TextField(max_length=500, null=True)),
            ],
            options={
                'ordering': ['itinerary', 'start_date'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('default_gathering_size', models.IntegerField(default=8)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_name', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50, null=True)),
                ('middle_name', models.CharField(max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50, null=True)),
                ('pronouns', models.IntegerField(choices=[(0, 'Unspecified'), (1, 'He/Him'), (2, 'She/Her'), (3, 'Them/They')], default=0)),
                ('email', models.EmailField(max_length=150, null=True)),
                ('phone', models.IntegerField(null=True)),
                ('street_address', models.CharField(max_length=150, null=True)),
                ('zip_code', models.IntegerField(null=True)),
                ('host_note', models.TextField(max_length=500, null=True)),
                ('attendee_note', models.TextField(max_length=500, null=True)),
            ],
            options={
                'ordering': ['last_name', 'preferred_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_is_primary', models.BooleanField(default=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Group')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Member')),
            ],
            options={
                'ordering': ['group', 'group_is_primary', 'member'],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='host_member',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='memberMixerApi.Member'),
        ),
        migrations.CreateModel(
            name='Gathering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancelled_date', models.DateTimeField(null=True)),
                ('cancelled_reason', models.TextField(max_length=500, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Event')),
                ('host_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='memberMixerApi.Group')),
                ('host_member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='memberMixerApi.Member')),
            ],
            options={
                'ordering': ['event', 'host_group'],
            },
        ),
        migrations.CreateModel(
            name='FoodRestriction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restriction', models.IntegerField(choices=[(0, 'Other'), (1, 'Peanut'), (2, 'Milk'), (3, 'Egg'), (4, 'Wheat'), (5, 'Soy'), (6, 'Fish'), (7, 'Shellfish'), (8, 'Alcohol'), (9, 'Caffeine')])),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Member')),
            ],
            options={
                'ordering': ['member', 'restriction'],
            },
        ),
        migrations.AddField(
            model_name='event',
            name='itinerary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Itinerary'),
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_addresses', models.TextField()),
                ('from_addresses', models.TextField()),
                ('cc_addresses', models.TextField(null=True)),
                ('sent_date', models.DateTimeField(auto_now_add=True)),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='memberMixerApi.EmailTemplate')),
            ],
            options={
                'ordering': ['-sent_date'],
            },
        ),
        migrations.CreateModel(
            name='Diet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diet', models.IntegerField(choices=[(0, 'Other'), (1, 'Raw'), (2, 'Vegan'), (3, 'Vegetarian'), (4, 'Low-Acid'), (5, 'Low-Carb'), (6, 'Low-Fat'), (7, 'Low-Sodium'), (8, 'Ketogenic'), (9, 'Gluten Free'), (10, 'Sugar Free'), (11, 'Soft Diet'), (12, 'Liquid Diet'), (13, 'Kosher'), (14, 'Halal')])),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Member')),
            ],
            options={
                'ordering': ['member', 'diet'],
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_attend', models.BooleanField(default=True)),
                ('can_host', models.BooleanField(default=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Event')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Group')),
            ],
            options={
                'ordering': ['event', 'group'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_type', models.IntegerField(choices=[(0, 'Cancelled'), (1, 'Attendee'), (2, 'Host')])),
                ('gathering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Gathering')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='memberMixerApi.Group')),
            ],
            options={
                'ordering': ['gathering', '-attendance_type', 'group'],
            },
        ),
        migrations.CreateModel(
            name='Conflict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conflicted_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflict_conflicted_a', to='memberMixerApi.Group')),
                ('conflicted_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflict_conflicted_b', to='memberMixerApi.Group')),
            ],
            options={
                'unique_together': {('conflicted_a', 'conflicted_b')},
            },
        ),
    ]
